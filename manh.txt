i,em : nghiêng chữ
u,ins : gạch chân chữ
THUỘC TÍNH CSS : 
- color
-background-color
- padding:căn lề 10px
- boder: 1px solid gray (VIỀN - 1px:độ dày của viền, Gray:màu của viền, Solid:nét liền (dashed:nét đứt,dotted:nét chấm)
- margin:căn lề ngoài viền (margin-top : 10px)
- font-family: font cua chu
- font-size : cỡ chữ 
- font-weigh : đậm chữ ( bằng với thẻ B <b></b>)
- float : căn ảnh (float:left thì chữ sang bên phải và ngược lại)
- text-decoration : gạch chân chữ
- line-height:20px (độ dãn của dòng)
- hover : di chuột thi làm đổi màu (
       a:hover{
        color : red
	transission : 0.4s
       }
)
- margin : auto (căn chỉnh ra giữa màn hình)
-     text-transform: uppercase : ép  in hoa
- thẻ a ko hiểu được with và height nên phải dùng display : block
-di chuột thằng bố mà cả 2 thg con đều hover 
   bố : hover .con {
     color : gray
   }
- position: relative;(làm gốc)
- position: absolute;(di chuyển so với thằng được làm gốc)
- display : flex - (dùng cho thằng div bố , dùng để chia cột hoặc chia hàng )
	  - flex-direction:column-reverse;(chia thàng hàng vao đảo đuôi lên đầu)
		          : column (chia thành hàng)
			  : row (chia thành cột)
			  :row-reverse (chia thành cột nhưng đảo đuôi lên đầu)
	  - flex-wrap : no-wrap ( chỉ hiện thị trên 1 hàng)
	  - flex-wrap : wrap (hiển thị hết hàng thì xuống hàng tiếp)
   	  - justify-content:center (dồn các phần tử ra giữa)
	  - justify-content:flex-start (dồn các phần tử sang trái)
          - justify-content:flex-end (dồn các phần tử sang phải)
	  - justify-content:space-between ( dàn đều các phần tử )
	  - justify-content:space-around (dàn đều các phần tử và cách đều 2 đầu)
	  - justify-content:space-evenly;(dàn đều các phần tử và cách 2 đầu bằng khoảng cách dàn đều)
	  - align-items:center (căn các phần tử ra chính giữa)
          - align-items:flex-start ( dồn các phần tử lên góc trên)
          - align-items:flex-end ( dồn các phần tử xuống góc dưới
- img:hover{
    transform: scale(2) - day la zoom;
    opacity: 0.7; - day la tao mờ ảnh
    transition: 5s;
} (thuộc tính zoom ảnh)

================================================ git ============================================================================================
git remote remove origin : xoa 1 repo dang ton tai trong folder
git add .
git commit -m "first commit"
git push

=========================================================================================================================================
                                 REACT:
import 'antd/dist/antd.css' - cai nay la cua antd import index.js
import 'react-toastify/dist/ReactToastify.css'- day la cai css cua cai toastify - import app.js
download React-Toastify : hien bang thong bao 
npm i redux react-redux redux-devtools-extension
npm i redux-thunk
npm i firebase
npm i react-toastify
  {productRelevant && productRelevant.length > 0 && productRelevant.filter(productRelevant=>productRelevant.name !== product.name).map((p, k) => {
import {Badge} from 'antd' dùng thông báo của cart 
import {Drawer,Button} from 'antd' cái hiện tb add cart bên phải
.toLocaleString() : chuyển 50000 thành 50.000
npm i react-quill : soạn thảo văn bản
{new Date().toLocaleString()} lay gio theo thoi gian thuc
{user.email.split("@")[0]}
{
const products = await Product.find({$text :{$search : query}}) tim kiem bat buoc phai co (text : true) trong model
}
=========================================================
                             MongoDB-nodejs
npm init -y
npm i express body-parser mongoose cors morgan express-jwt firebase-admin jsonwebtoken nodemon dotenv
npm i slugify
npm i cloudinary

npm i react-image-file-resizer: dùng cho file upload
npm i typewriter-effect : hieu ung may danh chu
npm i react-responsive-carousel :
npm i react-star-ratings: rating star
npm i lodash
 const {slug} = useParams()
npm i react-modal-image : xem chi tiet anh
npm i react-quill
npm i react-datepicker
npm i stripe : ben sever
npm i @stripe/stripe-js @stripe/react-stripe-js : ben client
      @stripe/react-stripe-js @stripe/stripe-js
npm i @react-pdf/renderer
npm install "@david`.kucsai/react-pdf-table"
npm i uniqueid :sever
============================================================================================
	Netflix 
npm i express mongoose jsonwebtoken nodemon dotenv
npm i crypto-js
  const {password,...info} = user._doc // tra ve user ma ko co paswword
  res.json(info)
========================================================================================
npm i body-parser cors morgan express-jwt  
được ủy quyền thích hợp
xác định phạm vi đánh giá
thực hiện dấu chân thông qua các công cụ tìm kiếm

thực hiện hack google
==========================

import './App.css';
import Login from './pages/auth/Login';
import { LoadingOutlined } from "@ant-design/icons";
import {
  BrowserRouter as Router,
  Switch,
  Route,

} from "react-router-dom";
import Register from './pages/auth/Register';
import Home from './pages/Home';
import { ToastContainer } from 'react-toastify';
import Header from './component/Header';
import 'react-toastify/dist/ReactToastify.css'
import RegisterComplete from './pages/auth/RegisterComplete';
import {useDispatch} from 'react-redux';
import {auth} from './Firebase';
import { useEffect } from 'react';
import Fogetpassword from './pages/auth/Fogetpassword';
import {currentUser} from './function/index'
import History from './pages/user/History'
import UserRouter from './Routers/UserRouter'
import CategoryUpdate from './pages/admin/category/CataegoryUpdate'
import Password from './pages/user/Password';
import WishList from './pages/user/WishList';
import AdminRoute from './Routers/AdminRoute'
import AdminDashboard from './pages/admin/AdminDashboard'
import AllProduct from './pages/admin/product/AllProduct'
import CategoryCreate from './pages/admin/category/CategoryCreate';
import SubCreate from './pages/admin/sub/SubCreate';
import SubUpdate from './pages/admin/sub/SubUpdate';
import ProductCreate from './pages/admin/product/ProductCreate';
import ProductUpdate from './pages/admin/product/ProductUpdate';
import Product from './pages/Product';
import CategoryHome from './pages/category/CategoryHome';
import SubHome from './pages/sub/SubHome';
import Shop from './pages/Shop';
import Cart from './pages/Cart';
import SideDraw from './component/draw/SideDraw';
import CheckOut from './pages/CheckOut';
import CreateCouponPage from './pages/admin/coupon/CreateCouponPage';
import Payment from './pages/Payment';
import { Suspense } from "react";



======================================================================
			Chon truong dai hoc cho a Trung  
Vũ Đức Mạnh-B17DCAT123
Số thứ tự : 33
Tên đề tài : Kiểm thử phát hiện lỗ hổng bảo mật trên hệ thống website(Lỗ hổng SQLinjection, XSS, Brute Force)   open mendelay


khắc kị bất thường ,vợ chồng ăn ở ko bền lâu, trước hợp sau lìa,sản nghiệp sẵn sàng lần hồi cũng tẩu tán phu phụ tâm lí nghịch
 thường ,hạnh phúc gia đình sau trước hư nát,phu thê li biệt , vợ chồng ko bỏ thì chồng phải chết

1.Đại học hà nội : Công nghệ thông tin (dạy bằng tiếng Anh) - Chất lượng cao : 2020 -23,45đ (khoa này thì học phí đắt) ==>(done)
2học hà nội : Công nghệ thông tin (dạy bằng tiếng Anh), năm 2020-lấy 24.65đ  ==>(done)
3.Đại học Khoa học và Công nghệ Hà Nội : An toàn thông tin : 2020 lấy 24.1đ  ==>(done)
4.Đại học Khoa học và Công nghệ Hà Nội : Công nghệ Thông tin và truyền thông -2020 : 24,75đ  ==>(done)
5.Học viện kỹ thuật mật mã : An toàn thông tin - 2020 lấy 24.9đ  ==>(done)
			   : Công nghệ thông tin - 2020 lấy 25.8đ
6.Đại học Kiến trúc Hà Nộ: Công nghệ thông tin - 2020 lấy 21đ	==>(done)
7.Đại học khoa học tự nhiên : Máy tính và khoa học thông tin : 2020 lấy 24.8đ
8.Đại Học Xây Dựng Hà Nội  :  Công nghệ thông tin - 2020 lấy 24.25đ	==>(done)
9.Đại học công nghiệp Hà Nội : Công nghệ thông tin - 2020 lấy 25.01đ	==>(done)
10.Đại học Nhân văn hà nội    : nghành Hàn Quốc học
11.Đại học thủy lợi : Công nghệ thông tin - 2020 lấy 25.5đ ==>(done)
12.Học viện ngân hàng : Ngôn ngữ Anh - năm 2020  lấy: 25đ	==>(done)
13.Học viện ngân hàng : Công nghệ thông tin -đây là nghành ms năm nay mới có	==>(done)
14.Học viện ngân hàng : Hệ thống thông tin quản lý -2020 -25đ ==>(done)
15.Đại học mở : Công nghệ thông tin - 2020 lấy 23đ  ==>(done)
16.Học viện Tài chính :Ngôn ngữ Anh - năm 2020  lấy: 32,70đ (tiếng anh nhân đôi)==>(done)
17.Đại học Điện lực : Công nghệ thông tin - 2020 lấy 20đ ==>(done)
18.Đại học Công nghệ Giao thông Vận tải (Cơ sở Hà Nội) : Công nghệ thông tin - 2020 lấy 23đ ==>(done)
19.Đại học Công nghệ Giao thông Vận tải (Cơ sở Hà Nội) :Hệ thống thông tin- 2020 lấy 19.5đ ==>(done)
20.Đại học Giao thông Vận tải : Công nghệ thông tin - 2020 lấy 24.75đ==>(done)
21. Đại học Mỏ - Địa chất Hà Nội : Công nghệ thông tin - 2020 lấy 17đ ==>(done)
22.Đại học tài nguyên và môi trường  : Công nghệ thông tin - 2020 lấy 17đ ==>(done)
23.Đại học kinh doanh và công nghệ hà nội : Công nghệ thông tin  -2020 16đ==>(done)
24.Đại học bách khoa : Tiếng Anh KHKT và Công nghệ 24.1 : giảng dạy bằng tiếng anh ==>(done)
25.Đại học Kinh tế Kỹ thuật - Công nghiệp (Cơ sở Hà Nội) - 2020 lấy 19đ==>(done)
======================================
====================================
repair : fix, out of service, 
advertisement: tv,radio,commercial, promotion,
impressing = congratulation (an tuong) :impressing , excite,enjoy, great,satisfy,amazing,intersting,not..disappointed
time :delay,schedule, postpone
celebration : anniversary, party,celebrate
review : look at, look over, carefully, check, exam


 {products && products.length > 0 && products.map((p, k) => {
                                return (
    
                                    <CartProductUser
                                        product={p}
                                    ></CartProductUser>
                                )
                            })
                            
                            
                            }


============================

import './App.css';
import Login from './page/auth/Login';
import Footer from './page/header/Footer';
import Header from './page/header/Header';
import {
  BrowserRouter as Router,
  Switch,
  Route,
  Link
} from "react-router-dom";
import {currentUser} from './function/User'
import { auth } from './Firebase';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css'
import Register from './page/auth/Register';
import RegisterComple from './page/auth/RegisterComple';
import AdminDaskBoard from './page/admin/AdminDaskBoard';
import {useDispatch} from 'react-redux';
import {useSelector} from 'react-redux';
import { useEffect } from 'react';
import ForgetPassword from './page/auth/ForgetPassword';
import AdminRouter from "./router/AdminRouter"
import AuthRouter from './router/AuthRouter';
import Category from './page/admin/Category';
import UpdateCategory from './page/admin/UpdateCategory';
import SubCategory from './page/admin/SubCategory';
import UpdateSubCategory from './page/admin/UpdateSubCategory';
import Product from './page/admin/Product';
import UpdateProduct from './page/admin/UpdateProduct';
import Home from './page/Home';
import ChiTietSP from './page/ChiTietSP';
import DrawSlide from './compoment/DrawSlide';
import Cart from './page/Cart';
import UserPayment from './compoment/UserPayment';
import News from './compoment/News';
import CheckOut from './page/CheckOut';
import Coupon from './page/admin/Coupon';
import CouponUpdate from './page/admin/CouponUpdate';
import CheckOutSuccess from './page/CheckOutSuccess';
import User from './page/User';
import Order from './page/admin/Order';
import ChooseCate from './page/ChooseCate';
import UserWishLish from './page/user/UserWishLish';
import Store from './page/Store';
// import UserWishLish from '';
function App() {
  const dispatch = useDispatch();
  const {user} = useSelector((state)=>({...state}));
  useEffect(()=>{
    const unsubcrible = auth.onAuthStateChanged(async (user)=>{
      if(user){
        const idTokenResult = await user.getIdTokenResult();
      
       currentUser(user,idTokenResult.token)
       .then(res=>{
         console.log("current user==>",res.data);
          dispatch({
            type : "LOGIN",
            payload : {
              name : res.data.name,
              role: res.data.role,
              email : user.email,
              _id : res.data.id,
              token : idTokenResult.token
            }
          })
       }).catch(err =>{console.log("err:"+err);})
      }
    })
    return ()=> unsubcrible();
  },[dispatch])
  return (
    <div>   
    <Router>
   
     <Header></Header>
     <DrawSlide></DrawSlide>
     <ToastContainer position="top-center" autoClose={2000}></ToastContainer>
        <Switch>

          <Route path="/login">
            <Login />
          </Route>

          <Route path="/home">
            <Home />
          </Route>

          <Route path="/register">
            <Register />
          </Route>

          <Route path="/tin-tuc/:slug">
            <News />
          </Route>

          <Route path="/register-comple">
            <RegisterComple />
          </Route>

          <Route path="/forget-password">
            <ForgetPassword />
          </Route>

          <Route path="/chi-tiet-san-pham/:slug">
            <ChiTietSP />
          </Route>
          <Route path="/gio-hang">
            <Cart />
          </Route>

          <Route path="/the-loai/:slug">
            <ChooseCate />
          </Route>


          <Route path="/lich-su">
            <User />
          </Route>

          <Route path="/cua-hang">
            <Store />
          </Route>

          <Route path="/san-pham-yeu-thich">
            <UserWishLish />
          </Route>

          <AuthRouter exact path="/user-payment"  component={UserPayment} />
          <AuthRouter exact path="/payment-success"  component={CheckOutSuccess} />
          <AuthRouter exact path="/thanh-toan"  component={CheckOut} />
          <AdminRouter exact path="/admin"  component={AdminDaskBoard} />
          <AdminRouter exact path="/category-admin"  component={Category} />
          <AdminRouter exact path="/category-update-admin/:slug"  component={UpdateCategory} />
          <AdminRouter exact path="/sub-category-admin"  component={SubCategory} />
          <AdminRouter exact path="/update-sub-category-admin/:slug"  component={UpdateSubCategory} />
          <AdminRouter exact path="/coupon-admin"  component={Coupon} />
          <AdminRouter exact path="/product-admin"  component={Product} />
          <AdminRouter exact path="/order-admin"  component={Order} />
          <AdminRouter exact path="/update-product-admin/:slug"  component={UpdateProduct} />
          <AdminRouter exact path="/coupon-update-admin/:_id"  component={CouponUpdate} />
        </Switch>

        <Footer></Footer>
    </Router>
    </div>
  );
}

export default App;
====================================================================================================================================================================
										JAVASCRIPT
	classList.add
	classList.remove
	classList.toggle
	innerText,innerHTML
	window.innerHeight - co hieu ung "scroll"
	sự kiện : 'click', 'scroll' : cuộn chuột, 'mouseenter':trỏ chuột vào, 'mouseleave': rời chuột ra
  

=====================================================================================================================================
	link part 5 
https://sites.google.com/view/bai-test-mini-part-5-so-1/bai-test-mini-part-5-so-1?authuser=0
	1. sau giới từ + V-ing : nếu đằng sau có cụm danh từ (a/an/the/tinh tu so huu)
		    + N 
	2. his,our  + N
	3. S +V + phan than(himself) hoac by/for + phan than
	4. him,us,them  + 2ng
	5. us + 2 ng
LINK ĐỀ TEST P5 ĐẦU GIỜ  		https://sites.google.com/view/bai-test-mini-ni-part-5-so-6/bai-test-mini-part-5-so-1
LINK ĐIỀN ĐÁP ÁN		https://forms.gle/dMiantkruafsVWiK9
CHỮA ĐỀ PART 5 ĐỀ SỐ 6		https://drive.google.com/drive/folders/1E5M8qTLZ1aeg1zYUBSzDBQCQnf8aMxis?usp=sharing
LINK ĐỀ TEST CUỐI GIỜ 		https://sites.google.com/view/toeic-fighter-listening-test-6/listening
Link P2: https://docs.google.com/forms/d/1jvXDxke4H72BGddAFhHlGWi2VdUwLO-gT3dO6I28JcU/edit?usp=sharing

====================================================================================================================================================================
XEM TREN GIT : https://rawgit.com/vdmanhh/50_project_javascript/main/day_2_progress_step/1.html
	thuộc tính CSS mới
	1. white-spcae : nowrap : hiển thị trên cùng 1 dòng
	2. transform : translateX(10px) dịch chuyển theo trục Ox cách trái 10px
	3. z-index : thứ tự hiển thị
	4. em: là đơn vị tham chiếu tỷ lệ so với phần tử cha trực tiếp chứa nó hoặc chính nó dựa vào giá trị của thuộc tính là font-size
	5. rem: là đơn vị tham chiếu tỷ lệ so với phần tử gốc của website ở đây là thẻ <html> dựa vào giá trị của thuộc tính font-size
	6. outline : giống với boder, nhưng outline còn bao trọn border
	7. focus : giống thuộc tính hover nhưng focus ấn vào thì ms hiện còn hover thì di chuột vào là hiện
	8. filter: grayscale(100%) hoặc blur(20px); làm mờ ảnh
	9. width: calc(500px - 100px); chiều dài là 500px và trừ đi 100px
	10. transform: scale(2,1) tang giam kich thuoc cua phan tu vi du the div tang Chieu rong 10 va tang cd 10
	11. transform: rotate(-20deg) :  quay lệch lên góc thứ 1
	12. transition : transform 0.3 ease : chuyển động
	13. transform: translate(50px,100px) == với margin-left : 50px , margin-top : 100px
	14. background-size : auto 100% : chinh anh vua khung hinh
	15. background-position : center : chinh anh hien thi vi tri trung tam anh
	16. background-repeat: no-repeat : ko lap lai anh
	17. flex : 5;
	18.	 p:nth-of-type(2) {
  		background: red;
		} : chi dinh thuoc tinh cho phan tu cua n

	19.	p:nth-of-type(old) {
		  background: red;
		} : chi dinh thuoc tinh lẻ cho phan tu cua n
	20.	p:nth-of-type(even) {
  		background: red;
		} : chi dinh thuoc tinh chẵn cho phan tu cua n


	21. opacity: 1;
	    transition: opacity 0.3s ease-in 0.4s; => chuyen dong mo chu 0.4s

	22. btn:active{
    	    transform: scale(0.98);
	    } : lam cho button rung


	23.     const btn = document.createElement('button')
		btn.classList.ad('btnn')	=> tạo 1 phần tử là button, sau nó thêm thuộc tính class, rồi ghép n vào body hoặc có thể lả class nào đó
		document.body.appendChild(btn)

	24. textarea : lay value thi la "keyup"
	25. background-image: linear-gradient(to bottom,red,white,black) : màu nền background từ top xuong bottom 
	26. const data = +count.getAttribute('data-target') hoặc const data = document.querySelectorAll('.count').getAttribute('data-target')
	    -> dùng để lấy giá trị trong 1 phần tử	
	27. Math.ceil(x) : dùng để làm tròn số 	
	28.   const values = document.querySelectorAll('.span')
   	      return values[Math.floor(Math.random() * values.length)]
	  -> sinh 1 số ngẫu nhiên trong mảng values
	29. const data = d.split(',').filter(t=>t.trim()!=='')
	   -> data sẽ là 1 mảng, dùng để lọc dấu phẩy
	30. classList.contains("mystyle") : kiem tra trong danh sach class co class ten laf mystyle hay ko => kq tra ve true hoac false
	31. cups[1].nextElementSibling.classList.contains('active') : ktra thang ke tiep cua cup[1] la cup[2] co class la active hay ko
	32. a span:nth-child(1) : phan tu span thu 1
	33. animation: animate1 1s linear infinite; : ten-tgianchuyedong-cungtocdo-lapvohan
		@keyframes animate1{
   			 0%{
       			 left: -100%;
   				 }
    			 100%{
       			 left:100%
   				 }	
			}
	34.   filter: invert(1); co the lam mot icoin chuyen mau den san trang
	35. search::palacehoder : css cho search::palacehoder 
	36. manh.setAttribute("class", "democlass") : thêm class có tên là democlass vào div có tên là manh
	37.  width: max-content; dung cho thuoc tinh flex neu muon cho div con 1 chieu dai co dinh
	38. box.getBoundingClientRect().top : xem thg box nay n cach top la bn
	39.	z-index : 1 hoặc 2 là hiện thị trước hay hiện thị sau
	40. background-image: -webkit-linear-gradient(top,white,50%,black) - đổ màu xám cho ảnh- trên top 50% là màu trắng, dưới là màu đens
	41. background-color: transparent : màu trong suốt 
	42. background-attachment: fixed (thuộc tính làm cho nền đứng yên khi cuộn chuột)
	43. background-size: cover; làm cho cái ảnh n vừa in cái div
	44. background-position-x: -10px; dịc sang trái của ảnh 10px

	45. THUỘC TÍNH ANIMATION :thuộc tính tạo chuyển động
		@-webkit-keyframes zoom{
 		   from {transform: scale(1);}
   	           to {transform: scale(2);}
		} => đây là zoom ảnh , mún dùng ở đâu thì gọi zoom vào - ví dụ   animation: zoom 1s ;
================================================================================================================================================================
								Netflix-movie
	1. câu lệnh : rafce
	2. muon clone 1 folder ten react-admin trong repo ten youtube trong git :  git clone --single-branc -b react-admin https://github.com/safak/youtube.git .
	3. npm i express mongoose jsonwebtoken nodemon dotenv
	4. day la phuong phap Array.sort()
	
	sap xep cac so trong 1 mang theo thu tu lon dan : 

		const array1 = [1, 30, 4, 21, 100000];
			array1.sort(function (a,b){
			return a - b;
			});
	=> theo thu tu nho dan la :  b-a

	5.sap xep cac so trong 1 mang theo thu tu id lon dan :
	
		const array1 = [1, 30, 4, 21, 100000];
			array1.sort(function (a,b){
			return a.id - b.id;
			});
	=> theo thu tu nho dan la :  b.id-a.id

	6. var items = [
			  { name: 'Edward', value: 21 },
			  { name: 'Sharpe', value: 37 },
			  { name: 'And', value: 45 },
			  { name: 'The', value: -12 },
 			 { name: 'Magnetic', value: 13 },
 			 { name: 'Zeros', value: 37 }
			];

	// sort by name
	items.sort(function(a, b) {
	  var nameA = a.name.toUpperCase(); // ignore upper and lowercase
	  var nameB = b.name.toUpperCase(); // ignore upper and lowercase
		  if (nameA < nameB) {
   			 return -1;
				  }
 		 if (nameA > nameB) {
 			   return 1;
 			 }

 			 // names must be equal
 		 return 0;
		});
console.log(items);


======================================================================================================================================================
				Chat realtime medical
	npm i stream-chat stream-chat-react universal-cookie
