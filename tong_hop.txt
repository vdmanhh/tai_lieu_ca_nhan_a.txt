i,em : nghiêng chữ
u,ins : gạch chân chữ
THUỘC TÍNH CSS : 
- color
-background-color
- padding:căn lề 10px
- boder: 1px solid gray (VIỀN - 1px:độ dày của viền, Gray:màu của viền, Solid:nét liền (dashed:nét đứt,dotted:nét chấm)
- margin:căn lề ngoài viền (margin-top : 10px)
- font-family: font cua chu
- font-size : cỡ chữ 
- font-weigh : đậm chữ ( bằng với thẻ B <b></b>)
- float : căn ảnh (float:left thì chữ sang bên phải và ngược lại)
- text-decoration : gạch chân chữ
- line-height:20px (độ dãn của dòng)
- hover : di chuột thi làm đổi màu (
       a:hover{
        color : red
	transission : 0.4s
       }
)
- margin : auto (căn chỉnh ra giữa màn hình)
-     text-transform: uppercase : ép  in hoa
- thẻ a ko hiểu được with và height nên phải dùng display : block
-di chuột thằng bố mà cả 2 thg con đều hover 
   bố : hover .con {
     color : gray
   }
- position: relative;(làm gốc)
- position: absolute;(di chuyển so với thằng được làm gốc)
- display : flex - (dùng cho thằng div bố , dùng để chia cột hoặc chia hàng )
	  - flex-direction:column-reverse;(chia thàng hàng vao đảo đuôi lên đầu)
		          : column (chia thành hàng)
			  : row (chia thành cột)
			  :row-reverse (chia thành cột nhưng đảo đuôi lên đầu)
	  - flex-wrap : no-wrap ( chỉ hiện thị trên 1 hàng)
	  - flex-wrap : wrap (hiển thị hết hàng thì xuống hàng tiếp)
   	  - justify-content:center (dồn các phần tử ra giữa)
	  - justify-content:flex-start (dồn các phần tử sang trái)
          - justify-content:flex-end (dồn các phần tử sang phải)
	  - justify-content:space-between ( dàn đều các phần tử )
	  - justify-content:space-around (dàn đều các phần tử và cách đều 2 đầu)
	  - justify-content:space-evenly;(dàn đều các phần tử và cách 2 đầu bằng khoảng cách dàn đều)
	  - align-items:center (căn các phần tử ra chính giữa)
          - align-items:flex-start ( dồn các phần tử lên góc trên)
          - align-items:flex-end ( dồn các phần tử xuống góc dưới
	  - flex-basis: 200px; đặt độ dài ban đầu
- img:hover{
    transform: scale(2) - day la zoom;
    opacity: 0.7; - day la tao mờ ảnh
    transition: 5s;
} (thuộc tính zoom ảnh)

================================================ git ============================================================================================
git remote remove origin : xoa 1 repo dang ton tai trong folder
git add .
git commit -m "first commit"
git push

=========================================================================================================================================
                                 REACT:
import 'antd/dist/antd.css' - cai nay la cua antd import index.js
import 'react-toastify/dist/ReactToastify.css'- day la cai css cua cai toastify - import app.js
download React-Toastify : hien bang thong bao 
npm i redux react-redux redux-devtools-extension
npm i redux-thunk
npm i firebase
npm i react-toastify
  {productRelevant && productRelevant.length > 0 && productRelevant.filter(productRelevant=>productRelevant.name !== product.name).map((p, k) => {
import {Badge} from 'antd' dùng thông báo của cart 
import {Drawer,Button} from 'antd' cái hiện tb add cart bên phải
.toLocaleString() : chuyển 50000 thành 50.000
npm i react-quill : soạn thảo văn bản
{new Date().toLocaleString()} lay gio theo thoi gian thuc
{user.email.split("@")[0]}
{
const products = await Product.find({$text :{$search : query}}) tim kiem bat buoc phai co (text : true) trong model
}
=========================================================
                             MongoDB-nodejs
npm init -y
npm i express body-parser mongoose cors morgan express-jwt firebase-admin jsonwebtoken nodemon dotenv
npm i slugify
npm i cloudinary
npm i nodemon 
npm i react-image-file-resizer: dùng cho file upload
npm i typewriter-effect : hieu ung may danh chu
npm i react-responsive-carousel :
npm i react-star-ratings: rating star
npm i lodash
 const {slug} = useParams()
npm i react-modal-image : xem chi tiet anh
npm i react-quill
npm i react-datepicker
npm i stripe : ben sever
npm i @stripe/stripe-js @stripe/react-stripe-js : ben client
      @stripe/react-stripe-js @stripe/stripe-js
npm i @react-pdf/renderer
npm install "@david`.kucsai/react-pdf-table"
npm i uniqueid :sever
============================================================================================
	Netflix 
npm i express mongoose jsonwebtoken nodemon dotenv
npm i crypto-js
  const {password,...info} = user._doc // tra ve user ma ko co paswword
  res.json(info)
========================================================================================
npm i body-parser cors morgan express-jwt  
được ủy quyền thích hợp
xác định phạm vi đánh giá
thực hiện dấu chân thông qua các công cụ tìm kiếm

thực hiện hack google
==========================

import './App.css';
import Login from './pages/auth/Login';
import { LoadingOutlined } from "@ant-design/icons";
import {
  BrowserRouter as Router,
  Switch,
  Route,

} from "react-router-dom";
import Register from './pages/auth/Register';
import Home from './pages/Home';
import { ToastContainer } from 'react-toastify';
import Header from './component/Header';
import 'react-toastify/dist/ReactToastify.css'
import RegisterComplete from './pages/auth/RegisterComplete';
import {useDispatch} from 'react-redux';
import {auth} from './Firebase';
import { useEffect } from 'react';
import Fogetpassword from './pages/auth/Fogetpassword';
import {currentUser} from './function/index'
import History from './pages/user/History'
import UserRouter from './Routers/UserRouter'
import CategoryUpdate from './pages/admin/category/CataegoryUpdate'
import Password from './pages/user/Password';
import WishList from './pages/user/WishList';
import AdminRoute from './Routers/AdminRoute'
import AdminDashboard from './pages/admin/AdminDashboard'
import AllProduct from './pages/admin/product/AllProduct'
import CategoryCreate from './pages/admin/category/CategoryCreate';
import SubCreate from './pages/admin/sub/SubCreate';
import SubUpdate from './pages/admin/sub/SubUpdate';
import ProductCreate from './pages/admin/product/ProductCreate';
import ProductUpdate from './pages/admin/product/ProductUpdate';
import Product from './pages/Product';
import CategoryHome from './pages/category/CategoryHome';
import SubHome from './pages/sub/SubHome';
import Shop from './pages/Shop';
import Cart from './pages/Cart';
import SideDraw from './component/draw/SideDraw';
import CheckOut from './pages/CheckOut';
import CreateCouponPage from './pages/admin/coupon/CreateCouponPage';
import Payment from './pages/Payment';
import { Suspense } from "react";



======================================================================
			Chon truong dai hoc cho a Trung  
Vũ Đức Mạnh-B17DCAT123
Số thứ tự : 33
Tên đề tài : Kiểm thử phát hiện lỗ hổng bảo mật trên hệ thống website(Lỗ hổng SQLinjection, XSS, Brute Force)   open mendelay


khắc kị bất thường ,vợ chồng ăn ở ko bền lâu, trước hợp sau lìa,sản nghiệp sẵn sàng lần hồi cũng tẩu tán phu phụ tâm lí nghịch
 thường ,hạnh phúc gia đình sau trước hư nát,phu thê li biệt , vợ chồng ko bỏ thì chồng phải chết

1.Đại học hà nội : Công nghệ thông tin (dạy bằng tiếng Anh) - Chất lượng cao : 2020 -23,45đ (khoa này thì học phí đắt) ==>(done)
2học hà nội : Công nghệ thông tin (dạy bằng tiếng Anh), năm 2020-lấy 24.65đ  ==>(done)
3.Đại học Khoa học và Công nghệ Hà Nội : An toàn thông tin : 2020 lấy 24.1đ  ==>(done)
4.Đại học Khoa học và Công nghệ Hà Nội : Công nghệ Thông tin và truyền thông -2020 : 24,75đ  ==>(done)
5.Học viện kỹ thuật mật mã : An toàn thông tin - 2020 lấy 24.9đ  ==>(done)
			   : Công nghệ thông tin - 2020 lấy 25.8đ
6.Đại học Kiến trúc Hà Nộ: Công nghệ thông tin - 2020 lấy 21đ	==>(done)
7.Đại học khoa học tự nhiên : Máy tính và khoa học thông tin : 2020 lấy 24.8đ
8.Đại Học Xây Dựng Hà Nội  :  Công nghệ thông tin - 2020 lấy 24.25đ	==>(done)
9.Đại học công nghiệp Hà Nội : Công nghệ thông tin - 2020 lấy 25.01đ	==>(done)
10.Đại học Nhân văn hà nội    : nghành Hàn Quốc học
11.Đại học thủy lợi : Công nghệ thông tin - 2020 lấy 25.5đ ==>(done)
12.Học viện ngân hàng : Ngôn ngữ Anh - năm 2020  lấy: 25đ	==>(done)
13.Học viện ngân hàng : Công nghệ thông tin -đây là nghành ms năm nay mới có	==>(done)
14.Học viện ngân hàng : Hệ thống thông tin quản lý -2020 -25đ ==>(done)
15.Đại học mở : Công nghệ thông tin - 2020 lấy 23đ  ==>(done)
16.Học viện Tài chính :Ngôn ngữ Anh - năm 2020  lấy: 32,70đ (tiếng anh nhân đôi)==>(done)
17.Đại học Điện lực : Công nghệ thông tin - 2020 lấy 20đ ==>(done)
18.Đại học Công nghệ Giao thông Vận tải (Cơ sở Hà Nội) : Công nghệ thông tin - 2020 lấy 23đ ==>(done)
19.Đại học Công nghệ Giao thông Vận tải (Cơ sở Hà Nội) :Hệ thống thông tin- 2020 lấy 19.5đ ==>(done)
20.Đại học Giao thông Vận tải : Công nghệ thông tin - 2020 lấy 24.75đ==>(done)
21. Đại học Mỏ - Địa chất Hà Nội : Công nghệ thông tin - 2020 lấy 17đ ==>(done)
22.Đại học tài nguyên và môi trường  : Công nghệ thông tin - 2020 lấy 17đ ==>(done)
23.Đại học kinh doanh và công nghệ hà nội : Công nghệ thông tin  -2020 16đ==>(done)
24.Đại học bách khoa : Tiếng Anh KHKT và Công nghệ 24.1 : giảng dạy bằng tiếng anh ==>(done)
25.Đại học Kinh tế Kỹ thuật - Công nghiệp (Cơ sở Hà Nội) - 2020 lấy 19đ==>(done)
======================================
====================================
repair : fix, out of service, 
advertisement: tv,radio,commercial, promotion,
impressing = congratulation (an tuong) :impressing , excite,enjoy, great,satisfy,amazing,intersting,not..disappointed
time :delay,schedule, postpone
celebration : anniversary, party,celebrate
review : look at, look over, carefully, check, exam


 {products && products.length > 0 && products.map((p, k) => {
                                return (
    
                                    <CartProductUser
                                        product={p}
                                    ></CartProductUser>
                                )
                            })
                            
                            
                            }


============================

import './App.css';
import Login from './page/auth/Login';
import Footer from './page/header/Footer';
import Header from './page/header/Header';
import {
  BrowserRouter as Router,
  Switch,
  Route,
  Link
} from "react-router-dom";
import {currentUser} from './function/User'
import { auth } from './Firebase';
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css'
import Register from './page/auth/Register';
import RegisterComple from './page/auth/RegisterComple';
import AdminDaskBoard from './page/admin/AdminDaskBoard';
import {useDispatch} from 'react-redux';
import {useSelector} from 'react-redux';
import { useEffect } from 'react';
import ForgetPassword from './page/auth/ForgetPassword';
import AdminRouter from "./router/AdminRouter"
import AuthRouter from './router/AuthRouter';
import Category from './page/admin/Category';
import UpdateCategory from './page/admin/UpdateCategory';
import SubCategory from './page/admin/SubCategory';
import UpdateSubCategory from './page/admin/UpdateSubCategory';
import Product from './page/admin/Product';
import UpdateProduct from './page/admin/UpdateProduct';
import Home from './page/Home';
import ChiTietSP from './page/ChiTietSP';
import DrawSlide from './compoment/DrawSlide';
import Cart from './page/Cart';
import UserPayment from './compoment/UserPayment';
import News from './compoment/News';
import CheckOut from './page/CheckOut';
import Coupon from './page/admin/Coupon';
import CouponUpdate from './page/admin/CouponUpdate';
import CheckOutSuccess from './page/CheckOutSuccess';
import User from './page/User';
import Order from './page/admin/Order';
import ChooseCate from './page/ChooseCate';
import UserWishLish from './page/user/UserWishLish';
import Store from './page/Store';
// import UserWishLish from '';
function App() {
  const dispatch = useDispatch();
  const {user} = useSelector((state)=>({...state}));
  useEffect(()=>{
    const unsubcrible = auth.onAuthStateChanged(async (user)=>{
      if(user){
        const idTokenResult = await user.getIdTokenResult();
      
       currentUser(user,idTokenResult.token)
       .then(res=>{
         console.log("current user==>",res.data);
          dispatch({
            type : "LOGIN",
            payload : {
              name : res.data.name,
              role: res.data.role,
              email : user.email,
              _id : res.data.id,
              token : idTokenResult.token
            }
          })
       }).catch(err =>{console.log("err:"+err);})
      }
    })
    return ()=> unsubcrible();
  },[dispatch])
  return (
    <div>   
    <Router>
   
     <Header></Header>
     <DrawSlide></DrawSlide>
     <ToastContainer position="top-center" autoClose={2000}></ToastContainer>
        <Switch>

          <Route path="/login">
            <Login />
          </Route>

          <Route path="/home">
            <Home />
          </Route>

          <Route path="/register">
            <Register />
          </Route>

          <Route path="/tin-tuc/:slug">
            <News />
          </Route>

          <Route path="/register-comple">
            <RegisterComple />
          </Route>

          <Route path="/forget-password">
            <ForgetPassword />
          </Route>

          <Route path="/chi-tiet-san-pham/:slug">
            <ChiTietSP />
          </Route>
          <Route path="/gio-hang">
            <Cart />
          </Route>

          <Route path="/the-loai/:slug">
            <ChooseCate />
          </Route>


          <Route path="/lich-su">
            <User />
          </Route>

          <Route path="/cua-hang">
            <Store />
          </Route>

          <Route path="/san-pham-yeu-thich">
            <UserWishLish />
          </Route>

          <AuthRouter exact path="/user-payment"  component={UserPayment} />
          <AuthRouter exact path="/payment-success"  component={CheckOutSuccess} />
          <AuthRouter exact path="/thanh-toan"  component={CheckOut} />
          <AdminRouter exact path="/admin"  component={AdminDaskBoard} />
          <AdminRouter exact path="/category-admin"  component={Category} />
          <AdminRouter exact path="/category-update-admin/:slug"  component={UpdateCategory} />
          <AdminRouter exact path="/sub-category-admin"  component={SubCategory} />
          <AdminRouter exact path="/update-sub-category-admin/:slug"  component={UpdateSubCategory} />
          <AdminRouter exact path="/coupon-admin"  component={Coupon} />
          <AdminRouter exact path="/product-admin"  component={Product} />
          <AdminRouter exact path="/order-admin"  component={Order} />
          <AdminRouter exact path="/update-product-admin/:slug"  component={UpdateProduct} />
          <AdminRouter exact path="/coupon-update-admin/:_id"  component={CouponUpdate} />
        </Switch>

        <Footer></Footer>
    </Router>
    </div>
  );
}

export default App;
====================================================================================================================================================================
										JAVASCRIPT
	1.classList.add
	2.classList.remove
	3. classList.toggle
	4. innerText,innerHTML
	5. window.innerHeight - co hieu ung "scroll"
	sự kiện : 'click', 'scroll' : cuộn chuột, 'mouseenter':trỏ chuột vào, 'mouseleave': rời chuột ra

  	6. findIndex : tìm vị trí đầu tiên trong mảng thỏa mãn 1 đk=> kêt quả trả về vị trí của phần tử đấy
	   vd : const ages = [3, 10, 18, 20];

		ages.findIndex(checkAge)   // Returns 3

		function checkAge(age) {
  		return age > 18;
		}

	7. includes : kiểm tra xem phần tử đó có trong mảng hay ko => kqua trả về là true hoặc false
	   vd : 	const fruits = ["Banana", "Orange", "Apple", "Mango"];
			fruits.includes("Banana", 3);   // Returns false
	   kiểm tra trong mảng fruits có thằng Banana bắt đầu từ vị trí thứ 3 hay ko

	8. from() : tạo mảng từ 1 chuỗi
	   vd : const myArr = Array.from("ABCDEFG"); =>kết quả : A,B,C,D,E,F,G

	9. indexOf() : tìm kiếm vị trí của 1 phần tử trong mảng => kqua trả về vị trí phần tử đó
	   vd :	const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.indexOf("Apple")   // Returns 2 => trả về vị trí thứ 2

	10. isArray() : kiểm tra 1 đối tượng có phải là một mảng hay ko =>kq trả về true hoặc false
	   vd :	const fruits = ["Banana", "Orange", "Apple", "Mango"];
		Array.isArray(fruits)   // Returns true

	11. join() : Chuyển đổi các phần tử của một mảng thành một chuỗi:
	   vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.join()  => kết quả trả về : Banana,Orange,Apple,Mango
	nếu viết thành " fruits.join('+') " => kqua trả về : Banana + Orange + Apple + Mango
	
	12. lastIndexOf() : tìm kiếm vị trí cuối cùng của phần tử đó có trong mảng, nếu mảng đó có nhiều phần tử giống nhau
	   vd : const fruits = ["Apple", "Orange", "Apple", "Mango"]; => kết quả trả về vị trí phần tử đó
		fruits.lastIndexOf("Apple")   // Returns 2
	
		const fruits = ["Orange", "Apple", "Mango", "Apple", "Banana", "Apple"];
		fruits.lastIndexOf("Apple", 4) 
	=> nếu thếm số và sau thì hiểu rằng tìm từ vị trí số đó đổ lại

	13. pop() : loại bỏ phần tử cuối cùng trong mảng => kết quả trả về mảng chứa các phần tử còn lại
	   vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.pop(); => kết quả : Banana,Orange,Apple

	14. push() : thêm một phần tử vào cuối mảng 
	   vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.push("Kiwi", "Lemon", "Pineapple");  => kết quả : Banana,Orange,Apple,Mango,Kiwi,Lemon,Pineapple

	15. unshift() : thêm phần tử vào đầu mảng =>kq: trả về mảng mới
	   vd :	const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.unshift("Lemon", "Pineapple"); => kqua : Lemon,Pineapple,Banana,Orange,Apple,Mango

	16. Math.round(0.9) : làm tròn đến chữ số gần nhất
	  => kqua = 1

	17. reduce() 
		+ trừ các số trong 1 mảng, bắt đầu từ số đầu tiên
		vd : const numbers = [175, 50, 25];

			document.getElementById("demo").innerHTML = numbers.reduce(myFunc);
		
			function myFunc(total, num) {
			  return total - num;
				}
		=> kqua = 100
			
		+ Làm tròn tất cả các số trong một mảng và hiển thị tổng:
		 vd : const numbers = [15.5, 2.3, 1.1, 4.7];
			document.getElementById("demo").innerHTML = numbers.reduce(getSum, 0);

			function getSum(total, num) {
			  return total + Math.round(num);
				} 
			=> kqua = 24

	18. reduceRight() : Trừ các số trong mảng, bắt đầu từ cuối:
	   vd : const numbers = [175, 50, 25];

		document.getElementById("demo").innerHTML = numbers.reduceRight(myFunc);
		
		function myFunc(total, num) {
 		 return total - num;
		} 
		=>kqua = -200

	19. reverse() : Đảo ngược thứ tự của các phần tử trong một mảng:
	  vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];
		fruits.reverse();
 		=> kqua : Mango,Apple,Orange,Banana

	20. shift() : Loại bỏ mục đầu tiên của một mảng:
	 vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];
	     fruits.shift(); 
	=> kqua : trả về mảng mới
	  chú ý : fruits.shift() =  Banana

	21. slice() va subtring gion het nhau(nhung slice() lam dc voi mang va chuoi, subtring chi lam duoc voi chuoi) : Chọn các phần tử từ một mảng: bắt đầu chọn từ số đầu tiên và ko chọn số cuối cùng
	   vd : const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
		const citrus = fruits.slice(1, 3);
	  =>kqua : trả về từ 1->2 : "Orange", "Lemon"
	neu const citrus = fruits.slice(1); =>"Orange", "Lemon", "Apple", "Mango"
	neu const citrus = fruits.slice(0); hoac citrus = fruits.slice() =>"Banana", "Orange", "Lemon", "Apple", "Mango"
	22. some() : Kiểm tra xem có giá trị nào trong mảng thỏa mãn 1 điều kiện nào ko  không: => kqua trả về true hoặc false
	  vd : const ages = [3, 10, 18, 20];

		ages.some(checkAdult)   // Returns true

		function checkAdult(age) {
 		 return age >= 18;
		}

	23. splice() : thêm 1 phần tử vào mảng(chỉ số thứ nhất là vị trí thêm, chỉ số thứ 2 là xóa số phần tử)
	   vd : const fruits = ["Banana", "Orange", "Apple", "Mango"];

		// At position 2, add 2 elements:
		fruits.splice(2, 0, "Lemon", "Kiwi")
		fruits.splice(2, 1, "Lemon", "Kiwi") => thêm vào vị trí 2 và xóa đi 1 phần tử => kqua : Banana,Orange,Lemon,Kiwi,Mango
		chú ý : xóa trước r ms thêm

	24. toUpperCase : chuyen het ve chu hoa
	    toLowerCase : chuyen het ve chu thuong
	    startsWith : xem chuoi do co bat dau bang 1 tu khoa hay khong
	    endsWith  : xem chuoi do co bat dau bang 1 tu khoa hay khong

		let bien = 'hi my name is Manh'
		console.log(bien.toUpperCase ())  => MY NAME IS MANH
		console.log(bien.toLowerCase ())  => my name is manh
		console.log(bien.startsWith ('hi'))  => true
		console.log(bien.endsWith ('mannn'))  => false
	25. concat : them phan tu vao chuoi
	    split() : tach chuoi
		let m1 = 'manh duc vu';
		let m2 = 'duc';
		let m3 = 'vu'

		let m = m1.concat(m2,m3); => manh duc vu
		console.log(m1.split(' ')[1]); => duc
	
	26. const manh ={
   		 name : 'manh',
   		 age :'22'
		}
	JSON.stringify(manh) : chuyen dang du lieu sang JSON => { 'name ': 'manh', 'age ':'22'}
	JSON.parse() : chuyen dang JSON  sang lu lieu=> { name : 'manh', age :'22'}
	27. toFixed : làm tròn
		const bien =3.14323244
			bien.toFixed(3)  => 3.143
=====================================================================================================================================
	link part 5 
https://sites.google.com/view/bai-test-mini-part-5-so-1/bai-test-mini-part-5-so-1?authuser=0
	1. sau giới từ + V-ing : nếu đằng sau có cụm danh từ (a/an/the/tinh tu so huu)
		    + N 
	2. his,our  + N
	3. S +V + phan than(himself) hoac by/for + phan than
	4. him,us,them  + 2ng
	5. us + 2 ng
LINK ĐỀ TEST P5 ĐẦU GIỜ  		https://sites.google.com/view/bai-test-mini-ni-part-5-so-6/bai-test-mini-part-5-so-1
LINK ĐIỀN ĐÁP ÁN		https://forms.gle/dMiantkruafsVWiK9
CHỮA ĐỀ PART 5 ĐỀ SỐ 6		https://drive.google.com/drive/folders/1E5M8qTLZ1aeg1zYUBSzDBQCQnf8aMxis?usp=sharing
LINK ĐỀ TEST CUỐI GIỜ 		https://sites.google.com/view/toeic-fighter-listening-test-6/listening
Link P2: https://docs.google.com/forms/d/1jvXDxke4H72BGddAFhHlGWi2VdUwLO-gT3dO6I28JcU/edit?usp=sharing

====================================================================================================================================================================
XEM TREN GIT : https://rawgit.com/vdmanhh/50_project_javascript/main/day_2_progress_step/1.html
	thuộc tính CSS mới
	1. white-spcae : nowrap : hiển thị trên cùng 1 dòng
	2. transform : translateX(10px) dịch chuyển theo trục Ox cách trái 10px
	3. z-index : thứ tự hiển thị
	4. em: là đơn vị tham chiếu tỷ lệ so với phần tử cha trực tiếp chứa nó hoặc chính nó dựa vào giá trị của thuộc tính là font-size
	5. rem: là đơn vị tham chiếu tỷ lệ so với phần tử gốc của website ở đây là thẻ <html> dựa vào giá trị của thuộc tính font-size
	6. outline : giống với boder, nhưng outline còn bao trọn border
	7. focus : giống thuộc tính hover nhưng focus ấn vào thì ms hiện còn hover thì di chuột vào là hiện
	8. filter: grayscale(100%) hoặc blur(20px); làm mờ ảnh
	9. width: calc(500px - 100px); chiều dài là 500px và trừ đi 100px
	10. transform: scale(2,1) tang giam kich thuoc cua phan tu vi du the div tang Chieu rong 10 va tang cd 10
	11. transform: rotate(-20deg) :  quay lệch lên góc thứ 1
	12. transition : transform 0.3 ease : chuyển động
	13. transform: translate(50px,100px) == với margin-left : 50px , margin-top : 100px
	14. background-size : auto 100% : chinh anh vua khung hinh
	15. background-position : center : chinh anh hien thi vi tri trung tam anh
	16. background-repeat: no-repeat : ko lap lai anh
	17. flex : 5;
	18.	 p:nth-of-type(2) {
  		background: red;
		} : chi dinh thuoc tinh cho phan tu cua n

	19.	p:nth-of-type(old) {
		  background: red;
		} : chi dinh thuoc tinh lẻ cho phan tu cua n
	20.	p:nth-of-type(even) {
  		background: red;
		} : chi dinh thuoc tinh chẵn cho phan tu cua n


	21. opacity: 1;
	    transition: opacity 0.3s ease-in 0.4s; => chuyen dong mo chu 0.4s

	22. btn:active{
    	    transform: scale(0.98);
	    } : lam cho button rung


	23.     const btn = document.createElement('button')
		btn.classList.ad('btnn')	=> tạo 1 phần tử là button, sau nó thêm thuộc tính class, rồi ghép n vào body hoặc có thể lả class nào đó
		document.body.appendChild(btn)

	24. textarea : lay value thi la "keyup"
	25. background-image: linear-gradient(to bottom,red,white,black) : màu nền background từ top xuong bottom 
	26. const data = +count.getAttribute('data-target') hoặc const data = document.querySelectorAll('.count').getAttribute('data-target')
	    -> dùng để lấy giá trị trong 1 phần tử	
	27. Math.ceil(x) : dùng để làm tròn số 	
	28.   const values = document.querySelectorAll('.span')
   	      return values[Math.floor(Math.random() * values.length)]
	  -> sinh 1 số ngẫu nhiên trong mảng values
	29. const data = d.split(',').filter(t=>t.trim()!=='')
	   -> data sẽ là 1 mảng, dùng để lọc dấu phẩy
	30. classList.contains("mystyle") : kiem tra trong danh sach class co class ten laf mystyle hay ko => kq tra ve true hoac false
	31. cups[1].nextElementSibling.classList.contains('active') : ktra thang ke tiep cua cup[1] la cup[2] co class la active hay ko
	32. a span:nth-child(1) : phan tu span thu 1
	33. animation: animate1 1s linear infinite; : ten-tgianchuyedong-cungtocdo-lapvohan
		@keyframes animate1{
   			 0%{
       			 left: -100%;
   				 }
    			 100%{
       			 left:100%
   				 }	
			}
	34.   filter: invert(1); co the lam mot icoin chuyen mau den san trang
	35. search::palacehoder : css cho search::palacehoder 
	36. manh.setAttribute("class", "democlass") : thêm class có tên là democlass vào div có tên là manh
	37.  width: max-content; dung cho thuoc tinh flex neu muon cho div con 1 chieu dai co dinh
	38. box.getBoundingClientRect().top : xem thg box nay n cach top la bn
	39.	z-index : 1 hoặc 2 là hiện thị trước hay hiện thị sau
	40. background-image: -webkit-linear-gradient(top,white,50%,black) - đổ màu xám cho ảnh- trên top 50% là màu trắng, dưới là màu đens
	41. background-color: transparent : màu trong suốt 
	42. background-attachment: fixed (thuộc tính làm cho nền đứng yên khi cuộn chuột)
	43. background-size: cover; làm cho cái ảnh n vừa in cái div
	44. background-position-x: -10px; dịc sang trái của ảnh 10px

	45. THUỘC TÍNH ANIMATION :thuộc tính tạo chuyển động
		@-webkit-keyframes zoom{
 		   from {transform: scale(1);}
   	           to {transform: scale(2);}
		} => đây là zoom ảnh , mún dùng ở đâu thì gọi zoom vào - ví dụ   animation: zoom 1s ;

		animation-fill-mode : backwards => giữ nguyen trạng thái keyframe 0% sau khi có thuoc tinh animation-delay
	46. transform-origin : 0% 10% : đây là xác định tâm quay, cách bên trái 0%, cách top 10
	47. perspective : 800px : độ lồi của ảnh, vd sử dụng đi kèm với transform : rotateX(10deg) : được viết ở div bố
	48. transform:scale(1) : thuộc tính zoom, giá trị 1 là ko zoom
	48. transform:scale(2) : thuộc tính zoom, zoom to lên gấp 2
	50. transition-delay : 0.5s : sau 0.5s thì ms thực hiện hành động
	51. transiton-timing-function : ease,ease-in,ease-out,linear 
		ease : nhanh-cham
		ease-in : nhanh dần
		ease-out : chậm dần
		linear : chuyển động đều
	52. text-transform : uppercase : chữ hoa
====================================================================================================================================================================
						Mot so thu vien hay trong css 
	1. duong dan : <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.1/gsap.min.js"></script>
	 dia chi trang : https://greensock.com/
	 cu phap :   TweenMax.staggerFrom($('.mains'),1,{top:300,opacity:0},0.1) 
	(chuyen dong 1s, tu duoi len cach top 300, chuyen dong từ mờ đến đậm, các phần tử chuyển động cách nhau 0.1s)
================================================================================================================================================================
								Netflix-movie
	1. câu lệnh : rafce
	2. muon clone 1 folder ten react-admin trong repo ten youtube trong git :  git clone --single-branc -b react-admin https://github.com/safak/youtube.git .
	3. npm i express mongoose jsonwebtoken nodemon dotenv
	4. day la phuong phap Array.sort()
	
	sap xep cac so trong 1 mang theo thu tu lon dan : 

		const array1 = [1, 30, 4, 21, 100000];
			array1.sort(function (a,b){
			return a - b;
			});
	=> theo thu tu nho dan la :  b-a

	5.sap xep cac so trong 1 mang theo thu tu id lon dan :
	
		const array1 = [1, 30, 4, 21, 100000];
			array1.sort(function (a,b){
			return a.id - b.id;
			});
	=> theo thu tu nho dan la :  b.id-a.id

	6. var items = [
			  { name: 'Edward', value: 21 },
			  { name: 'Sharpe', value: 37 },
			  { name: 'And', value: 45 },
			  { name: 'The', value: -12 },
 			 { name: 'Magnetic', value: 13 },
 			 { name: 'Zeros', value: 37 }
			];

	// sort by name
	items.sort(function(a, b) {
	  var nameA = a.name.toUpperCase(); // ignore upper and lowercase
	  var nameB = b.name.toUpperCase(); // ignore upper and lowercase
		  if (nameA < nameB) {
   			 return -1;
				  }
 		 if (nameA > nameB) {
 			   return 1;
 			 }

 			 // names must be equal
 		 return 0;
		});
console.log(items);


======================================================================================================================================================
				Chat realtime medical
	client :  npm i stream-chat stream-chat-react universal-cookie
	server : npm init -y,  npm i bcrypt crypto dotenv express getstream stream-chat nodemon twilio cors
======================================================================================================================================================
				JQery
	1. slideUp() : thu nho lai vi du :  $('.noidung').slideUp()
	2. slideDown() : mo rong ra
	3. slideToggle() : vua thu vua mo
	4. toggleClass() : vua them vua xoa class
	5. addClass() : them class, giong classList.add trong javascript
	6. removeClass() xoa class
	7. next() : chi thanh phan tiep theo : vd $(this).next().addClass('active')
	8.   $('.actives').addClass('tayphai').one('webkitAnimationEnd', function (event) {
                    $('.tayphai').removeClass('tayphai')
                   
                });
	=> ham one thuc hien 1 hanh dong sau khi hanh dong khac xay ra
	9.   thoigian = setInterval(()=>{
           	$('.phais').trigger('click')
         	 },5000) : cu sau 5s lai tu dong click nua phais
	=> trigger : kich hoat 1 hanh dong
	10.  $(window).scroll(function () { 
                    let data = $('html, body').scrollTop()
                    if((data>200) && (data<800)){
                        $('.mains').addClass('actives')
                    
                    }
                    else{
                        $('.mains').removeClass('actives')
                       
                    }
                });
	=> hieu ung cuon chuot de tinh khoang cach cua body
	11. thu viện để sắp xếp các ảnh đầy trong 1 khối :  tai trong trang isotope
	sử dụng : thêm link thư viện vào html và trong script : 
		 $('ul').isotope({
               		 itemSelector : ".haha"
           		 }) => ul là class bố, haha là class con
	12. lay gia tri hoac gan, trong div , giong nhu thuoc tinh innerHTML cua javascript
	su dung : text() : vi du : $('manh').text()
	13. lay gia tri trong div vi du 1 kieu mk dinh nghia : data-manh => $(this).data('manh')
	14. $('.manh').hasClass(data) : kiem tra thang manh co class data hay ko
	15.$('.manh').each(()=>{}) , dung de duyet, giong voi forEach cua javascript
	16. $('.manh').fadeIn() : cho thang class manh hien thi == voi $('.manh').show()
	17. $('.manh').fadeOut() : cho thang fadeOut mat == voi $('.manh').hide()
	18. $('.xanh').index() : dung de lay vi tri phan tu
======================================================================================================================================================
	https://sites.google.com/view/test-full-so-3-toeic-fighter/trang-ch%E1%BB%A7
LINK ĐIỀN ĐÁP ÁN NGHE		https://docs.google.com/forms/d/1-pVApl270pQSXE_UiOrLFJZvdrrW-OiCbKCGtMOtuqc/edit?usp=sharing
LINK ĐIỀN ĐÁP ÁN ĐỌC		http://form-timer.com/start/df7f81ee
PHP Fatal error:  Uncaught Error: Class 'App\Controllers\BaseController' not found in C:\xampp\htdocs\learn\app\Controllers\helloworld.php:5
Stack trace:
#0 {main}
  thrown in C:\xampp\htdocs\learn\app\Controllers\helloworld.php on line 5

Fatal error: Uncaught Error: Class 'App\Controllers\BaseController' not found in C:\xampp\htdocs\learn\app\Controllers\helloworld.php:5
Stack trace:
#0 {main}
  thrown in C:\xampp\htdocs\learn\app\Controllers\helloworld.php on line 5
==========================================================================================================================================================
									PHP 
			1. start server : php spark serve
			2. link css : controllerr :        helper('html');  ,  helper('url'); ,   <?php echo link_tag('css/colors.css'); ?>
			3. form :  <form action="<?php echo base_url()."/vu/getdata" ?>" method="post" accept-charset="utf-8">
			4. lay data tu form :   + echo  $this->request->getPost("so");      
  					     + echo  $this->request->getPost("gia");;
==========================================================================================================================================================
									Laravel
			
	1. tao project : composer create-project laravel/laravel tenproject
	2. echo $manh  = {{$manh}}
	3. tao controller tren cmd :path :  htdocs/laravel8/basic :php artisan make:controller ContactController
	4. tao milderware : php artisan make:middleware Ten
	5. khoi tao serve : php artisan serve
	6. link : {{url('/home')}} hoac : {{URL::to('/home')}}
		hoac cach khac dat ten cho route r dung 
		=> Route::get('/home', function () {
   			 return view('welcome');
			})->name('con');
		su dung : {{ route('con') }}
	7. cai dat trong cmd : path : htdocs/laravel8/basic : composer require laravel/jetstream (va : php artisan jetstream:install livewire)
		cai nay de tao cac view va controller cho phan authentication: thuc chat la tao san cac trang login va register
		sau khi cai cac plugin thi cai dat trong cmd : php artisan migrate (de import cac bang vao csdl)
		sau khi cai dat thi thuc hien tiep trong cmd : npm install (va  : npm run production) de fix loi 'The Mix manifest does not exist when it does exist'

	8. cac cau lenh trong database : 
		- User::all() => lay ta ca nguoi dung
		- Category::latest()->get(); lay tat ca cate sap xep theo thoi gian moi nhat
	9. gui du lieu qua view 
		  $users = User::all();
    		return view('dashboard',compact('users'));

	10. cach viet foreach de do du lieu
			@foreach($user as %value)
	
			@endforeach
	11. {{$user->created_at->diffForHumans()}} tinh khoang tgian nguoi dung tao mk tu truoc toi nay : vi du=> 43 minute ago
	12. tao 1 model :  php artisan make:model Category -m (sau khi tao trong project xong, muon migrate vao trong database thi nhap : php artisan migrate)
	13.  return Redirect()->back()->with('success','Category was created success !!!'); quay tro la view truoc do va gui 1 gia tri la success co value la Category was created success !!!
	14. co 2 cach de lay du lieu tu 2 bang
 	- cach 1 :
		public function manhdv(){
       		 return $this->hasOne(User::class,'id','user_id'); hoặc beLongsto
   		 }  => viet o trong model
	cau lenh su dung : $categories = Categories::latest()->paginate(5);

	- cach 2 : su dung cau lenh query
	$categories = DB::table('categories')
		      -> join('users','categories.user_id','users.id')
		      -> select ('categories.*','users.name')
		      -> latest()->paginate(5);

	15. cau lenh cmd : dung de cai dat goi kiem tra kich thuoc anh truoc khi tai : composer require intervention/image
		sau do vao config->app.php-> them dong Intervention\Image\ImageServiceProvider::class vao dong 168	
		sau do them dong : 'Image' => Intervention\Image\Facades\Image::class  vao cuoi config->app.php
		sau do chay lenh cmd : php artisan vendor:publish --provider="Intervention\Image\ImageServiceProviderLaravelRecent"
	=> thuc chat cua viec nay la khi mk tai anh len muon anh do co kich thuoc theo mong muon cua mk 
	16. cau lenh cmd cho thay anh user : php artisan storage:link
		sau do vao .env thay APP_URL tu localhost thanh => http://127.0.0.1:8000/
	=>dieu nay de hien thi anh avatar hien thi tu may tinh
	17. chia giao dien lam nhieu phan : @yield('admin1')
		@extends('admin.admin_master')
		@section('admin1')

		@endsection
		=>muc dich cua viec nay la host ko cho load trang co size lon, nen phai chia thanh file nho hon de load
	sau do chia file lon : @include('admin.body.sidebar')
	18.  php artisan make:migration add_column_user_table --table=users : them 1 column vao DB
	19. tao session :   session(['key' => 'value']);
	20. lay session :   $value = $request->session()->get('key');
	21. cap nhat  : $request->session()->put('key', 'value');
	222. xoa session : $request->session()->forget('key');
	23. xoa toan bo : $request->session()->flush();

			Session::put('manh',['name'=>haha])
			Session::put('manh')
			Session::forget('manh')
	24. php artisan make:migration alter_table_users_add_avatar
					đẩy lên server	
        25. Co the lay duoc gia tri 'prefix' va ten cua route
		=> $prefix = Request::route()->getPrefix();
		=> $route = Route::current()->getName();
	26. php artisan make:migration add_column_user_table --table=users
	27. tach trong laravel giống như trong reactjs : $color = explode(',',old_color)
	28.  Cài đặt gói packet Cart : composer require bumbummen99/shoppingcart
	   sau khi cai xong thi cai tiep : php artisan vendor:publish --provider="Gloudemans\Shoppingcart\ShoppingcartServiceProvider" --tag="config"
	29. cac cau lenh ve Auth() 
			Auth::check(),
			Auth::id()
			Auth::user()
			Auth::attempt()
	30. cai dat goi thanh toan qua stripe :composer require stripe/stripe-php
		sau do import thu vien vao trang home_user : <script src="https://js.stripe.com/v3/"><script/>
	31. cai dat goi PDF : composer require barryvdh/laravel-dompdf
	 sau do vao config/app.php: tai dong 169 paste : Barryvdh\DomPDF\ServiceProvider::class, roi paste dong 232 : 'PDF' => Barryvdh\DomPDF\Facade::class,
	32. co the su dung forelse de kiem tra 1 mang có rỗng hay ko 
			@forelse
			@empty
			@endforelse
	33. có thể sử dụng  @guest(giống như một câu điệu kiện if nhưng sẽ check xem đã đăng nhập hay chưa)
		@guest
		@else
		@endguset
	34. có thể lấy dc tổng tiền theo ngày tháng năm

		$date = date('d-m-y');
		$day = App\Models\Order::where('order_date',$date)->sum('amount');

		$months = date('F');
		$month = App\Models\Order::where('order_month',$months)->sum('amount');

		$years = date('Y');
		$year = App\Models\Order::where('order_year',$years)->sum('amount');
	35. tao pagination : php artisan vendor:publish --tag=laravel-pagination
		sau khi import xong thi 1 forder se dc tao trong : view/vendor/pagination

	===================================================================================================================================================
						React-Laravel
	Cai dat passport de dung chuc nang authentication
	1. composer require laravel/passport    /https://laravel.com/docs/8.x/passport
		sau do thi chay : php artisan migrate
		sau do cai tiep : php artisan passport:install -> sau khi cai xong thi n tao ra 2 ma secret client
		vao env them CLIENT_1 = Ma secret 1
			     CLIENT_2 = Ma secret 2
		sau do vao App\Providers\AuthServiceProvider them vao dong 27, roi bo comment dong 16
			if (! $this->app->routesAreCached()) {
           			 Passport::routes();
      				  }
		sau do vao config/auth.php dong 40 them
			'api' => [
     			   'driver' => 'passport',
        		   'provider' => 'users',
   				 ],
	2. npm install react-slick --save : slider
	   npm install slick-carousel --save

	===================================================================================================================================================
	1. chạy lệnh cmd : php artisan config:cache
	2. chay tiep : php artisan cache:clear
	3. chay tiep :php artisan view:clear
	4. sau do nen file basic thanh file zip
	5. sau đó và trang : axiomdynamicsbd.com/cpanel axiomdynamicsbd.com:2083
	6. xoa 



LINK ĐỀ TEST 		https://sites.google.com/view/test-full-so-5-toeic-fighter/reading
	LINK ĐIỀN ĐÁP ÁN NGHE		https://forms.gle/GwnM7DHiYwjX6ap87
	LINK ĐIỀN ĐÁP ÁN ĐỌC		https://addonforge.com/timer/1FAIpQLSfd7M7Z8DwCcbsGRzV_BGzpd51sRYZqarGfH50XMpDSOZX9-A

	1. cai :composer require tymon/jwt-auth
	2. vao congfig/app : dong 178 them : Tymon\JWTAuth\Providers\LaravelServiceProvider::class, tiep tuc them  
	'JWTAuth' => Tymon\JWTAuth\Facades\JWTAuth::class,
        'JWTFactory' => Tymon\JWTAuth\Facades\JWTFactory::class,  dong cuoi
	3. chay lenh : php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"
	4. chay lenh : php artisan jwt:secret
	5. vao model/user : them : use Tymon\JWTAuth\Contracts\JWTSubject;
	6. trong model/user dong 15 them : implements JWTSubject
	7 sau do them 2 ham vao dong  52
	  public function getJWTIdentifier() {
        return $this->getKey();
   		 }
 	   public function getJWTCustomClaims() {
       	 return [];
   		 }    

		
	===================================================================================================================================================
		
						kiểm tra và khai thác lỗ hổng CVE ZERO 2020-1472 , 2018-0802 
	Hacker có thể lợi dụng Zerologon để chiếm quyền Domain Controller trên bất kỳ phiên bản nào của Windows Server 2019 hoặc Windows
	 Server 2016 cũng như bấtkỳ biến thể nào của Windows Server phiên bản 1909, Windows Server phiên bản 1903, Windows Server phiên bản
	 1809 (Datacenter và Standar), Windows Server 2012 R2, Windows Server 2008 R2 Service Pack 1.

	Zerologon là gì?
	Về cơ bản, Zerologon hay CVE-2020-1472 là kết quả của một vấn đề trong sơ đồ xác thực mật mã Netlogon Remote Protocol. Đây là giao thức 
	được sử dụng để xác thực người dùng và các máy trong mạng dựa trên domain và cũng được sử dụng để cập nhật mật khẩu máy tính từ xa. 
	Thông qua lỗ hổng này, hacker có thể mạo danh máy khách và thay thế toàn bộ mật khẩu của Domain Controller. Điều này giúp hacker chiếm được
	 quyền quản trị miền.

			web : xét mật khẩu tất cả các tài khoản trên máy chủ bằng null
			sau đó lấy tất cả mã hash của tất cả tài khoản ấy về
			rồi lấy quyền cmd

			quet domain IP
			nmap -p 445,389 -sV -v 113.161.152.116
			cổng 389 TCP, UDP
			SMB qua IP (Microsoft-DS): cổng 445 TCP, UDP
https://quantrimang.com/cach-cai-dat-active-directory-trong-windows-server-2012-154180

 CVE-2019-0708 là một lỗ hổng thực thi mã từ xa trong Dịch vụ kết nối Máy tính từ xa của Windows (Windows Remote Desktop Services).
Lỗ hổng này cho phép kẻ tấn công khai thác bằng cách kết nối đến hệ thống mục tiêu thông qua Remote Desktop Protocol. Lỗ hổng rất 
nguy hiểm vì nó cho phép kẻ tấn công thực thi được những câu lệnh trên hệ điều hành nếu khai thác thành công mà không cần phải thực 
hiện bước xác thực cũng như đòi hỏi về tương tác người dùng, dẫn đến việc kẻ tấn công chiếm quyền kiểm soát hệ thống và thực hiện những
 hành động theo ý muốn của chúng

APPLIANCES <i class="fab fa-accessible-icon"></i>
.Refrigerators
..Double Door
..Mini Regrerators
..Single Door

.Televisions
..Big Screen TVs
..OLED TVs
.. Smart TVs

.Washing Machines
..Energy Efficent
..Washer Dryers
..Washer Only
========
BEAUTY <i class="fab fa-acquisitions-incorporated"></i>
.Bady Care
..Baby Diapers
..Baby Food
..Baby Wipes

.Beauty and Personal
..Eys Makeup
..Hair Care
..Lip Makeup

.Food and Drinks
..Bererage
..Chocolates
..Snacks
==========
SWEET HOME <i class="fas fa-ad"></i>
.Home Decor
..Clocks
..Lightings
..Wall Decor

. Home Funnishings
..Bed Liners
..Bedsheets
..Blacnkers

. Living Room
..Coffee Tables
..Dinning Sets
..TV Units
========

FASHION <i class="fas fa-address-book"></i>
.Mans Bottom Ware
..Mans Cargos
..Mans jeans
.. Mans Trousers

.Mans FootWare
..Mans Casual Shoes
..Mans Formal Shoes
..Mans Sports Shoes

. Mans Top Ware
..Mans Casual Shirts
..Mans Kurtas
..Mans Tshirt

. Women Footware
..Women Sheakers
.. Women Flats
..Women Heels
======
ELECTRONIC <i class="fab fa-airbnb"></i>
.Computers
..Monitors
..Printers
..Projectors

.Gaming
..Gaming Keyboard
..Gaming Mouse
..Gaming Mousepads

.Mobile Accessory
..Designer Cases
..Plain Cases
..Screen Guards

find / -name doom* 2>/dev/null

git clone https://github.com/SecureAuthCorp/impacket.git

5*b + a div 4*3  (với a=12, b=4)

x,y,z : real 
c : char
i,j:interger
câu 5 chọn B(nên nhớ đề bài bảo in ra "x=12.41", nên in ra phải có cả số X, mà muốn có số X thì phải đăt X trong dấu ngoặc '')
ý A là in ra x, mk thay x vào thì kết quả in ra là 12,41235
ý B n có kí tự x được đặt trong dấu ngoặc '', nên khi in ra n có dạng x=12,41
ý C là thay x=12,41235 rồi chia cho 5, khi in ra là 1 số khác đề bài
ý D cũng vậy, chia cho5 xong thì chia tiêp cho 2

gpgconf --kill all


https://drive.google.com/file/d/1KC9UwDCFa7IXFx2Qq7YNxqGQuKHywnoK/view?usp=sharing
- https://forms.gle/vjtg2gPi8p3xrYAu8
Part 5 BoTro NangCao So 01	
- https://drive.google.com/file/d/1hWUpc9i_R5AByC3QuHq52vS6IMxZ1Snx/view?usp=sharing
- https://forms.gle/oFRv2iqt7X81enRx6
Part 7 BoTro NangCao So 02	
- https://forms.gle/k61pEkRe4QHgDmGD7 
- https://drive.google.com/file/d/1MoWQXkh8XXX889bbck29O8AXBXAdyVZk/view?usp=sharing
Part 5 BoTro NangCao So 02	
- https://forms.gle/ZNC3PM7d4hB1BiLE6
- https://drive.google.com/file/d/1Ie-0e8gbqfrWJ3hoChHo6UhGEmkrhkRg/view?usp=sharing
Part 7 BoTro NangCao So 03	
- https://drive.google.com/file/d/1k9tCu9REmilqu4QUcS75LxDQuPC9Z49e/view?usp=sharing
- https://forms.gle/JJ9UAzMhk7ZBLKzw5
Part 5 BoTro NangCao So 03	
- https://drive.google.com/file/d/1zfi6UZETD_TWkqgeXI3oex064vJLTBLn/view?usp=sharing
- https://forms.gle/es7a6P3zEsNsadDP6
sk_test_51IktQVD7EFDXuxlii4ooMWSYWYUbzANZusKtyvaM9PJiDdSnhKLp66pVktaxqU3h4gT1XU240LC7H9DT1icenZv1002r3v5Inp

sđt lớp trưởng :0983411065


ecryption with user b is public key
ecryption with user a is private key
ecryption with session key
zip compression function
Radix-64 conversion function


Part 7 BoTro NangCao So 07
- Link làm bài: https://sites.google.com/view/toeic-fighter-nang-cao-p7-07/reading
- Link điền đáp án: http://form-timer.com/start/6fd731e2
- File PDF:	https://drive.google.com/drive/folders/1XisVy5lk9kG5rjWWzIHF1-XS0-S8LpRF
=====
Part 5 BoTro NangCao So 06
- Link làm bài: https://sites.google.com/view/toeic-fighter-p5-nang-cao-06/p5-n%C3%A2ng-cao-s%E1%BB%91-06 
- Link điền đáp án: https://form-timer.com/start/0e7fa146
- File PDF:	https://drive.google.com/file/d/1GKLBlFTALslhZgw33OEhTlk5sW1_RDmq/view?usp=sharing
=====================
Part 7 BoTro NangCao So 08
- Link làm: https://sites.google.com/view/toeic-fighter-nang-cao-p7-08/reading
- Link điền đáp án	http://form-timer.com/start/d51396dc
- File PDF	https://drive.google.com/file/d/1nES7FzLAeWF2PKGQ673YD7TlipQhIq0f/view?usp=sharing

Part 5 BoTro NangCao So 08
- Link làm: https://sites.google.com/view/toeic-fighter-p5-nang-cao-08/p5-n%C3%A2ng-cao-s%E1%BB%91-07
- Link điền đáp án	https://test.gclocked.com/?form=-MndcABDXdQORbednAhk
- File PDF	https://drive.google.com/file/d/1WkJSyNAwZ8JSA52z_4itY4Xt8IpKJWDd/view?usp=sharing

Part 7 BoTro NangCao So 09
- Link làm: https://sites.google.com/view/toeic-fighter-nang-cao-p7-09/reading
- Link điền đáp án	http://form-timer.com/start/7248de14
- File PDF	https://drive.google.com/file/d/1Z-zxz2e3Tzwf-jGRXbctO2_JcgGa_wz8/view?usp=sharing


Part 5 BoTro NangCao So 10	https://sites.google.com/view/toeic-fighter-p5-nang-cao-10/p5-n%C3%A2ng-cao-s%E1%BB%91-09
	https://forms.gle/QYhm7oawdzFXgxVw6
File PDF	https://drive.google.com/file/d/1aaie-ax5eb45VykAleLOuIk1Bxq1klQN/view?usp=sharing
Part 7 BoTro NangCao So 11	https://sites.google.com/view/toeic-fighter-nang-cao-p7-11/reading
	http://form-timer.com/start/7fca6f0e
File PDF	https://drive.google.com/file/d/13v--kyHeQEifThFMYKC-DXNoEtCF2rSb/view?usp=sharing
chuyện gì cũng giải quyết dc mà, cứ để mai b sang xem chuyện ntn rồi mk cùng nhau giải quyết
đừng nghĩ ngợi nữa nhé

===============================
python3 run.py
===============================




========================================================================================================================================================================
					react 
		1. useHistory thay bang let history = useNavigate();
			import { useNavigate } from 'react-router-dom';


============================================================================================================================================================


お気に入りの



pv
https://docs.google.com/document/d/1ILZF3YhfBpS7xsRGVp7zOcMzT_jDV7cx0iZpcFoC-vQ/edit
https://docs.google.com/document/d/1OhnLmuwaASPteoN8qQ6NtJ2tDeD3JmHrRv8GstLEFVo/edit
Bình Trần Hữu15:17
https://www.youtube.com/playlist?list=PL_-VfJajZj0VgpFpEVFzS5Z-lkXtBe-x5
https://www.youtube.com/playlist?list=PL_-VfJajZj0U1MSx1IMu13oLJq2nM97ac


life cycle compoment
https://freetuts.net/component-life-cycle-trong-reactjs-2387.html
https://mycv.vn/cv-suggestor
Infomation Security 
(Current GPA: 2.75)
Posts and Telecommunications Institute of Technology (PTIT)
HTML/PUG/CSS/SCSS/Javascript

Knowledge of working with HMTL5, CSS3, Javascript (ES6), PUG, SCSS
Knowledge of working with Bootstrap


Knowledge of working React Hooks
Knowledge of working Redux, Redux middleware (Redux Thunk, Redux Toolkit)
Knowledge of working with React Router DOM
Knowledge of fetching data with Fetch, Axios
Basic of working React UI Libraries: Reactstrap, Ant Design, Semantic UI
Basic with consuming and designing RESTful APIs
Basic of working NextJS
Knowledge of working with GIT, NPM and YARN


Basic of design database and writing API with MongDB and Express

Technologies used:

PUG, SASS, Bootstrap



Completion time:

13/08/2021 - 26/08/2021 (13 days)



Repository:

https://github.com/awesome-academy/OE39-FE-PR1-Binh
CERTIFICATE
Certificate T3H

Graduated from ReactJS course at T3H
Many Certificate UDEMY


Become a Front-end developer professional
Looking forward to finding a stable job in the long term
Looking forward to finding a job with good promotion opportunities
Actively learn and gain working experience to become a Fullstack programmer in the next time.


Mô tả công việc
• Tham gia tìm hiểu chuyên sâu về Front-End để chuẩn bị các kiến thức và hoàn thiện kỹ năng trước khi tham gia làm việc tại các dự án lớn của Công ty.
• Bạn sẽ trở thành một lập trình viên nắm chắc kiến thức cơ bản và nâng cao về ngôn ngữ JavaScript, hiểu và vận dụng tốt các công nghệ Web Frontend như: HTML5/CSS3, Bootstrap 4, ES6, TypeScript, đặc biệt có khả năng sử dụng thành thạo ReactJS – một trong những thư viện JavaScript mạnh & phổ biến nhất do Facebook phát triển từ 2013 và đang được sử dụng bởi hàng trăm công ty lớn trên thế giới như: Netflix, Airbnb, American Express, Facebook, WhatsApp, eBay, Instagram…
• Các công nghệ được đào tạo bao gồm:
• Programming Languages: HTML5/CSS3, JavaScript, ES6, TypeScript
• Library: ReactJS
• CSS Libraries: Bootstrap 4
• Source Controls: Git
• Tools: Visual Studio Code
• Testing Framework: Jest
• WebServices: RESTful WebServices
• WebServices Testing: Postman
• Code Quality Analysis: Eslint, Tslint, Prettier
• Được đào tạo về quy trình phát triển dự án phần mềm, luyện tập kỹ năng coding trong dự án với các chuyên gia công nghệ & lập trình viên nhiều năm kinh nghiệm.
I salute you all!
My name is Vu Duc Manh, a year-end student at the Institute of Post and Telecommunications Technology, after learning about the company's recruitment information, I feel that I fit the recruitment criteria of the company. Regarding my own ability, I am an active, inquisitive, seeking person who can endure well under pressure. Do not continue of the environment to work Professional, I still lack skills in teamwork and work experience. So I really want to apply to work at the company to hone my knowledge and learn a lot of valuable experiences from the brothers and sisters in the company. I look forward to helping you and giving me more opportunities.
I sincerely thank you guys!
Vu Duc Manh

promise sinh ra dùng cho các thao tác bất đồng bộ, trước khi promise sinh ra chúng ta hay dùng callback đê xử lý, khi sử dụng callback thì hay xảy ra callback hell
,callback hell làm cho lập trình viên khó đọc code vì sẽ lồng vào nhau, promise sinh ra giải quyết vần đề đó, giúp code dex đọc dễ hiểu, để tạo 1 promise chúng ta tạo 1 từ khóa new với Promise, trong contrusctor của đối tượng được tạo

Bình Trần Hữu21:49
PureComponent
PureFunction
React.memo()\
Bình Trần Hữu21:52
HOC
CSR vs SSR
Bình Trần Hữu21:54
Callback
1.	Side effects
Bình Trần Hữu21:56
Rules  of Hooks
Bình Trần Hữu21:57
Truthy, Falsy
Data type


Hoisting => Hoisting là hành vi mặc định của JavaScript về việc di chuyển các khai báo lên đầu để compiled hay thực thi code của bạn
Closure =>Closure là một chức năng có quyền truy cập vào phạm vi cha, ngay cả sau khi scope đã đón
bind(), call(), apply()
IIFE
React, Vue vs Jquery

Sync vs Async
Scope
let, var, const
Declare, Express, Arrow function

Immutable vs Mutable

Deep copy VS Shallow copy
JSX là gì?
React.createElement()

Babel
Webpack

Bind() và this
Feature ES
ES6
Method work with array

HTML5 vs HTML
CSS3 và CSS

Redux, Redux middleware
https://longnv.name.vn/javascript-nang-cao/dong-bo-va-bat-dong-bo-trong-javascript
https://www.programmerall.com/article/41721982669/


======================


50%-300
30%-250
25%-200
Trả lời: Reducer là các hàm thuần túy chỉ ra rõ ràng trạng thái ứng dụng thay đổi n
hư thế nào khi khi một hành động cụ thể xảy ra. Bằng cách này, nó xét đến trạng thái 
trước đó và các hành động để chuyển sang một trạng thái mới.


=============================
SASS-SCSS
	cai dat SASS : npm init -> npm i node-sass --save
   "scsstocss": "node-sass sass/main.scss css/style.css -w"
npm run scsstocss

clip path
   1. mixin:
	@mixin Manh($a,$b){
 	 color : $a;
  	text-decoration : $b;
	}
	=> @include Manh(red,none);

    2. extend 
	%Manh{
	color : red;
	text-decoration : none;
	}
	
	=> @extend %Manh ;
	
     3. funtion
	
	@function Manh($a,$b){
	return $a*$b;
	}
	
	=> Manh(1,3);
      4. &:not(:last-child){  cho tất cả các phần tử margin :10px ngoại trừ thg cuối
	 margin : 10px
	}
   
      5. outline-offset : 1.5rem => outline ben ngoai 1 phan tu cach ptu do 1.5rem

 clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 93%, 70% 100%, 30% 100%, 0 92%, 0 0);
    background: radial-gradient( rgba(142,158,252,.8),rgba(28,62,255,0.8)); 

==================================
typescript :
npm init
npm i typescript
npx tsc --init
npm i ts-node-dev

"dev":"tsnd --respawn ./src/index.ts"
"build" : "tsc ./src/index.ts --outDir ./build"

